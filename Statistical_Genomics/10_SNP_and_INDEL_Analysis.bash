#!/bin/bash

# 1 Variant Calling and Annotation
# 1.3 Variant calling
    # 1.3.1 Preparing the reference genome for use with GATK
    ## Create directory for the reference genome
    mkdir -p refgenome
        ## https://ftp.ensembl.org/pub/release-94/fasta/bos_taurus/dna/

    ## Examine BAM file with samtools view
    samtools view data/SRR1188706_Chr4.bam | head
    samtools view data/SRR1262533_Chr4.bam | head

    ## What is the name of the sequence to which reads have been mapped?
        ## 3rd column is the reference sequence name
        ## Chr4

    ## Uncompress and modify the name of the sequences
    gunzip refgenome/Bos_taurus.UMD3.1.dna.chromosome.4.fa.gz
        ## rename

    ## Index FASTA file with SAMtools
    samtools faidx refgenome/Bos_taurus.UMD3.1.dna.chromosome.4.fa

    ## Generate dictionary with Picard
    picard CreateSequenceDictionary \
        R=refgenome/Bos_taurus.UMD3.1.dna.chromosome.4.fa \
        O=refgenome/Bos_taurus.UMD3.1.dna.chromosome.4.dict
    
    # 1.3.2 Sorting and indexing the BAM files
    ## Sort
    for INPUT in data/SRR1*_Chr4.bam; do
        OUTPUT=$(echo $INPUT | sed "s/\.bam/\.sorted\.bam/")
        samtools sort -O 'bam' -T tmp_ -o $OUTPUT $INPUT
    done

    ## Index
    for INPUT in data/SRR1*_Chr4.sorted.bam; do
        samtools index -b $INPUT
    done

    # 1.3.3 Mark duplicates
    ## Flag potential duplicates with Picard
    for INPUT in data/SRR1*_Chr4.sorted.bam; do
        echo "--------------------Flagging duplicates in $INPUT"
        OUTPUT=$(echo $INPUT | sed "s/\.bam/\.dupMarked\.bam/")
        echo "--------------------Output: $OUTPUT"
        METRICS=$(echo $INPUT | sed "s/\.bam/\.dupMetrics\.txt/")
        echo "--------------------Metrics: $METRICS"
        picard MarkDuplicates \
            I=$INPUT \
            O=$OUTPUT \
            M=$METRICS
    done

    ## Sort
    for INPUT in data/SRR1*_Chr4.sorted.dupMarked.bam; do
        OUTPUT=$(echo $INPUT | sed "s/\.bam/\.sorted\.bam/")
        samtools sort -O 'bam' -T tmp_ -o $OUTPUT $INPUT
    done

    ## Index
    for INPUT in data/SRR1*_Chr4.sorted.dupMarked.sorted.bam; do
        samtools index -b $INPUT
    done

    ## What proportion of the reads are duplicates?
        ## See 8th column 

        ## SRR1188706_Chr4
        # LIBRARY	UNPAIRED_READS_EXAMINED	READ_PAIRS_EXAMINED	SECONDARY_OR_SUPPLEMENTARY_RDS	UNMAPPED_READS	UNPAIRED_READ_DUPLICATES	READ_PAIR_DUPLICATES	READ_PAIR_OPTICAL_DUPLICATES	PERCENT_DUPLICATION	ESTIMATED_LIBRARY_SIZE
        # GA1750.unknown	    2235	291577	0	0	277	1211	0	0.004611	35004782
        # HWUSI-EAS1674.unknown	20218	0	    0	0	183	0	    0	0.009051	

        ## SRR1262533_Chr4
        ## METRICS CLASS	picard.sam.DuplicationMetrics
        # LIBRARY	UNPAIRED_READS_EXAMINED	READ_PAIRS_EXAMINED	SECONDARY_OR_SUPPLEMENTARY_RDS	UNMAPPED_READS	UNPAIRED_READ_DUPLICATES	READ_PAIR_DUPLICATES	READ_PAIR_OPTICAL_DUPLICATES	PERCENT_DUPLICATION	ESTIMATED_LIBRARY_SIZE
        # C09ABACXX.TTAGGC	154	0	    0	0	2	0	    0	0.012987	
        # C09FNACXX.TTAGGC	128	0	    0	0	0	0	    0	0	
        # D0F84ACXX.TTAGGC	200	0	    0	0	2	0	    0	0.01	
        # D0H2WACXX.TTAGGC	406	0	    0	0	1	0	    0	0.002463	
        # D0N40ACXX.TTAGGC	308	0	    0	0	0	0	    0	0	
        # D0NCGACXX.TTAGGC	255	0	    0	0	0	0	    0	0	
        # GA253.TTAGGC	    451	117081	0	0	40	3424	0	0.029359	1962526

    # 1.3.4 Base Quality Score Reaclibration (BQSR)

    # Only in variant calling, so it happens in only this type of analysis. The tool used for the variants has this function itself.


        # download variants from the study
        # wget ftp://ftp.ebi.ac.uk/pub/databases/nextgen/bos/variants/population_sites/
        # UGBT.population_sites.UMD3_1.20140307.vcf.gz

        # extract variants on chromosome 4
        # vcftools --gzvcf UGBT.population_sites.UMD3_1.20140307.vcf.gz \
        # --chr 4 --recode \
        # --out popsites/UGBT.population_sites.UMD3_1.20140307.Chr4

        ## Check manual for the meaning of the four arguments
            ## --gzvcf  read  compressed  (gzipped) VCF files directly.
            ## --chr    chromosome
            ## --recode generate new file in VCF format from the input VCF file after applying the filtering options specified
            ## --out    defines the output filename prefix for all files generated by  vcftools

    ## Index the VCF file
    gatk IndexFeatureFile \
        --input popsites/UGBT.population_sites.UMD3_1.20140307.Chr4.recode.vcf

    ## Compute statistics for BQSR
    for INPUT in data/SRR1*_Chr4.sorted.dupMarked.sorted.bam; do
        OUTPUT=$(echo $INPUT | sed "s/\.sorted\.dupMarked\.sorted\.bam/\.output_BaseRecalibrator\.table/" | sed "s/data\//bqsr\//")
        gatk BaseRecalibrator \
            -I $INPUT \
            -R refgenome/Bos_taurus.UMD3.1.dna.chromosome.4.fa \
            --known-sites popsites/UGBT.population_sites.UMD3_1.20140307.Chr4.recode.vcf \
            -O $OUTPUT
    done

    ## Apply the recalibration
    for INPUT in data/SRR1*_Chr4.sorted.dupMarked.sorted.bam; do
        OUTPUT=$(echo $INPUT | sed "s/\.bam/\.recal\.bam/" | sed "s/data\//bqsr\//")
        BQSRFILE=$(echo $INPUT | sed "s/\.sorted\.dupMarked\.sorted\.bam/\.output_BaseRecalibrator\.table/" | sed "s/data\//bqsr\//")
        gatk ApplyBQSR \
            -I $INPUT \
            -R refgenome/Bos_taurus.UMD3.1.dna.chromosome.4.fa \
            --bqsr-recal-file $BQSRFILE \
            -O $OUTPUT
    done
    
    # 1.3.5 Variant calling
    ## Create a target file called "targetRegion.bed":
    ## Chr4 91249874 95266624

    ## Call variants
    gatk HaplotypeCaller \
        --input bqsr/SRR1188706_Chr4.sorted.dupMarked.sorted.recal.bam \
        --output variants/SRR1188706_Chr4.variants.vcf \
        --reference refgenome/Bos_taurus.UMD3.1.dna.chromosome.4.fa \
        --intervals popsites/targetRegion.bed \
        --dbsnp popsites/UGBT.population_sites.UMD3_1.20140307.Chr4.recode.vcf

    gatk HaplotypeCaller \
        --input bqsr/SRR1262533_Chr4.sorted.dupMarked.sorted.recal.bam \
        --output variants/SRR1262533_Chr4.variants.vcf \
        --reference refgenome/Bos_taurus.UMD3.1.dna.chromosome.4.fa \
        --intervals popsites/targetRegion.bed \
        --dbsnp popsites/UGBT.population_sites.UMD3_1.20140307.Chr4.recode.vcf

    for INPUT in bqsr/SRR1*_Chr4.sorted.dupMarked.sorted.recal.bam; do
        OUTPUT=$(echo $INPUT | sed "s/\.sorted\.dupMarked\.sorted\.recal\.bam/\.variants\.vcf/" | sed "s/bqsr\//variants\//")
        gatk HaplotypeCaller \
            --input $INPUT \
            --output $OUTPUT \
            --reference refgenome/Bos_taurus.UMD3.1.dna.chromosome.4.fa \
            --intervals popsites/targetRegion.bed \
            --dbsnp popsites/UGBT.population_sites.UMD3_1.20140307.Chr4.recode.vcf
    done
    
# 1.4 Variant annotation

    ## Annotate genetic variants
    for INPUT in ~/StatGen/lab10/variants/SRR1*_Chr4.variants.vcf; do
        OUTPUT=$(echo $INPUT | sed "s/\.vcf/\.vep\.vcf/")
        vep --database \
            --species bos_taurus \
            --vcf -i $INPUT \
            -o $OUTPUT \
            --force_overwrite
    done

    # vep --database \
    #     --species bos_taurus \
    #     --vcf -i ~/StatGen/lab10/variants/SRR1188706_Chr4.variants.vcf \
    #     -o  ~/StatGen/lab10/variants/SRR1188706_Chr4.variants.vep.vcf \
    #     --force_overwrite

    # vep --database \
    #     --species bos_taurus \
    #     --vcf -i ~/StatGen/lab10/variants/SRR1262533_Chr4.variants.vcf \
    #     -o  ~/StatGen/lab10/variants/SRR1262533_Chr4.variants.vep.vcf \
    #     --force_overwrite
    

    ## How many variants were identified?
    ## 9161 and 5363

    ## Check the manual and work out how to add SIFT scores to the output vcf
    ## --sift s

    ## What proportion of the missense variants are predicted to be deleterious with higher confidence?
    ## 533 (5.8%) and 355 (6.6%%)

# 1.5 Variant filtering
    ## Filter for specific types of variants
        ## E.g. extract missense variants:
        ## filter_vep -I variants_VEP.vcf --format vcf -o missense_only.vcf \
        ## --filter "Consequence matches missense" --force_overwrite
    ## Count of coding variants in a specific gene
        ## hint: link in pdf
        ## find variants in a list of gene names
        ## --filter "SYMBOL in BRCA1,BRCA2"
    filter_vep -I ~/StatGen/lab10/variants/SRR1188706_Chr4.variants.vep.vcf --format vcf -o ~/StatGen/lab10/variants/SRR1188706_Chr4.variants.coding_ontology.vcf \
    --ontology --filter "Consequence is coding_sequence_variant"

    filter_vep -I ~/StatGen/lab10/variants/SRR1262533_Chr4.variants.vep.vcf --format vcf -o ~/StatGen/lab10/variants/SRR1262533_Chr4.variants.coding_ontology.vcf \
    --ontology --filter "Consequence is coding_sequence_variant"
    
        ## find variants within a gene
        ## geneis
        ## find variants in multiple genes
        ## also gene in +3 ensembl codes

    ## filter_vep -I ~/StatGen/lab10/variants/SRR1188706_Chr4.variants.vep.vcf --format vcf -o ~/StatGen/lab10/variants/SRR1188706_Chr4.variants.coding_VGNCn.vcf \
    ## --filter "30842"

    ## filter_vep -I ~/StatGen/lab10/variants/SRR1188706_Chr4.variants.vep.vcf --format vcf -o ~/StatGen/lab10/variants/SRR1188706_Chr4.variants.coding_LEP.vcf \
    ## --filter "LEP"


# 1.6 Variant metrics
    ## Get allele frequency of each variant
    vcftools --vcf variants/SRR1188706_Chr4.variants.vep.vcf --freq --out variants/SRR1188706_Chr4.variants.freq

    vcftools --vcf variants/SRR1262533_Chr4.variants.vep.vcf --freq --out variants/SRR1262533_Chr4.variants.freq

    ## Examine output files

    ## Count each type of change
    vcftools --vcf variants/SRR1188706_Chr4.variants.vep.vcf --TsTv-summary --out variants/SRR1188706_Chr4.variants.TsTv

    vcftools --vcf variants/SRR1262533_Chr4.variants.vep.vcf --TsTv-summary --out variants/SRR1262533_Chr4.variants.TsTv

    ## Examine output files
    ## Which base changes occur most often?
        ## AG and CT

        ## SRR1262533_Chr4.variants.TsTv.TsTv.summary
        ## MODEL	COUNT
        ## AC	735
        ## AG	2758
        ## AT	490
        ## CG	655
        ## CT	2711
        ## GT	710
        ## Ts	5469
        ## Tv	2590

        ## SRR1262533_Chr4.variants.TsTv.TsTv.summary
        ## MODEL	COUNT
        ## AC	411
        ## AG	1625
        ## AT	347
        ## CG	382
        ## CT	1522
        ## GT	377
        ## Ts	3147
        ## Tv	1517

    ## Why might these be most common?
        ## hint: link in pdf
        ## Deamination - Cytosine gets deaminated to Uracil, which is then corrected
        ## without error.
        ## When the target of deamination is 5-Methylcytosine, it results in Thymine,
        ## which does not get corrected without error. The spot is recognised as a
        ## mismatch, but it's correctly repaired only if it's detected before passing
        ## from the replication fork.

    ## How can you output a new VCF file with only the genotypes for the first sample?
        ## VCFtools manual - you have everything described. With examples on the top, you can compare the output file comparing the sites in two vcf files - inout dif files and it gives us the different sites. Manuals are good for this. Can also do this in the other direction. Which variants we have in all of the samples (they shouldn't have an influence since they all have it), and which are not in all (influecne survival?)
    
    ## Why are duplicates not that important in RNAseq?
        ## Based on transcription - when a protein is needed, the gene is used and RNA is produced. Transcription starts and a protein is produced. Advantage of RNAseq to genome sequencing - genome tells you whether it's there or not. RNAseq - if the gene is there, it doesn't neeed to be used. We get mRNA, so it's transcribed. If we then look at the proteome, we also see if it's there after all. If we're facing radiation, we have mutations in special genes. If these are transcribed often. If we do RNAseq, we want to know how often this is happening. By nature we have a lot of copies in RNAseq. We need them to see which are differentially expressed. PCR during sequencing is still a big discussion (newwer tech try to remove this step). Still we hope, that if there is already a lot of the sequences already, and little of other seq, the ratio will be conserved in the results as well, despite if there's duplicates.
    
